<?xml version="1.0" encoding="UTF-8"?>
<bean:beans xmlns="http://www.springframework.org/schema/batch"
	xmlns:bean="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-2.5.xsd
http://www.springframework.org/schema/batch 
http://www.springframework.org/schema/batch/spring-batch-3.0.xsd
http://www.springframework.org/schema/jdbc 
http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

	<bean:import resource="classpath:application.xml" />
<!-- 	
 	 <jdbc:initialize-database data-source="bssdataSource">
		<jdbc:script location="org/springframework/batch/core/schema-drop-mysql.sql" />
		<jdbc:script location="org/springframework/batch/core/schema-mysql.sql" />
	</jdbc:initialize-databas --> 
	
	<job id="helloWorldJob">
		<step id="step_hello" next="step_world">
			<tasklet ref="hello" transaction-manager="transactionManager"></tasklet>
		</step>
		<step id="step_world">
			<tasklet ref="world" transaction-manager="transactionManager"></tasklet>
		</step>
	</job>

	<bean:bean id="hello" class="com.shatacloud.batch.helloworld.WriteTasklet">
		<bean:property name="message" value="Hello "></bean:property>
	</bean:bean>

	<bean:bean id="world" class="com.shatacloud.batch.helloworld.WriteTasklet">
		<bean:property name="message" value=" World!"></bean:property>
	</bean:bean>


	<!-- 读取csv文件 -->
	<bean:bean id="csvItemReader"
		class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
		<bean:property name="resource" value="classpath:sample-data.csv" />
		<bean:property name="lineMapper"><!-- 将文件的每一行映射成一个Pojo对象 -->
			<bean:bean
				class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<bean:property name="lineTokenizer" ref="lineTokenizer" />
				<bean:property name="fieldSetMapper">
					<bean:bean
						class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<bean:property name="prototypeBeanName" value="person"></bean:property>
					</bean:bean>
				</bean:property>
			</bean:bean>
		</bean:property>
	</bean:bean>
	<bean:bean id="person" class="com.shatacloud.batch.csv.Person"></bean:bean>

	<bean:bean id="lineTokenizer"
		class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
		<bean:property name="delimiter" value="," />
		<bean:property name="names">
			<bean:list>
				<bean:value>id</bean:value>
				<bean:value>firstName</bean:value>
				<bean:value>lastName</bean:value>
			</bean:list>
		</bean:property>
	</bean:bean>



	<!-- 写CSV文件 -->
	<bean:bean id="csvItemWriter"
		class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
		<bean:property name="resource" value="file:src/main/java/output.csv" />
		<bean:property name="lineAggregator">
			<bean:bean
				class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<bean:property name="delimiter" value=","></bean:property>
				<bean:property name="fieldExtractor">
					<bean:bean
						class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<bean:property name="names" value="id,firstName,lastName"></bean:property>
					</bean:bean>
				</bean:property>
			</bean:bean>
		</bean:property>
	</bean:bean>


	<bean:bean id="csvItemProcessor" class="com.shatacloud.batch.csv.CsvItemProcessor"></bean:bean>
	<job id="csvJob">
		<step id="csvStep">
			<tasklet transaction-manager="transactionManager">
				<chunk reader="csvItemReader" writer="csvItemWriter"
					processor="csvItemProcessor" commit-interval="1">
				</chunk>
			</tasklet>
		</step>
	</job>



 
	<bean:bean id="jdbcItemReader"  class="org.springframework.batch.item.database.JdbcCursorItemReader" scope="step">
         <bean:property name="dataSource" ref="portaldataSource" />
         <bean:property name="sql" value="select record_time,flow_rate,channel_idn,sp_code,host_name,user_num from r_sector_flow_5 where id &lt; ?" />
         <bean:property name="rowMapper">
              <bean:bean class="org.springframework.jdbc.core.BeanPropertyRowMapper">
                  <bean:property name="mappedClass" value="com.shatacloud.batch.jdbc.entity.FlowRate" />
             </bean:bean>
         </bean:property>
         <bean:property name="preparedStatementSetter" ref="paramStatementSetter" />
     </bean:bean>
     <bean:bean id="paramStatementSetter" class="org.springframework.batch.core.resource.ListPreparedStatementSetter" scope="step">
         <bean:property name="parameters">
             <bean:list>
                 <bean:value>#{jobParameters['id']}</bean:value>
             </bean:list>
         </bean:property>
     </bean:bean>
     
	<bean:bean id="jdbcItemWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
          <bean:property name="dataSource" ref="bssdataSource" />
          <bean:property name="sql" value="insert into r_sector_flow (record_time,flow_rate,channel_idn,sp_code,host_name,user_num) values (:record_time,:flow_rate,:channel_idn,:sp_code,:host_name,:user_num)" />
         <bean:property name="itemSqlParameterSourceProvider">
              <bean:bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
         </bean:property>
     </bean:bean>
	<bean:bean id="jdbcItemProcessor" class="com.shatacloud.batch.jdbc.JdbcItemProcessor"></bean:bean>
	
	<job id="jdbcJob">
		<step id="jdbcStep">
			<tasklet transaction-manager="transactionManager" >
				<chunk reader="jdbcItemReader" writer="jdbcItemWriter" processor="jdbcItemProcessor" commit-interval="10000">
				</chunk>
			</tasklet>
		</step>
	</job>
</bean:beans>